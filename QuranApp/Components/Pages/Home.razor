<!-- MainPage.razor -->
@page "/"
@inject NavigationManager nav


<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f8f9fa;
        margin: 0;
        padding: 0;
    }


    .container {
        margin-top: 20px;
    }

    .table {
        margin-top: 20px;
    }

    .btn {
        padding: 5px 10px;
        border-radius: 5px;
    }

    h3 {
        color: #007bff;
    }

    .text-center {
        text-align: center;
    }

    .my-4 {
        margin-top: 1.5rem;
        margin-bottom: 1.5rem;
    }

    .table {
        width: 100%;
        border-collapse: collapse;
    }

    .table-bordered {
        border: 1px solid #dee2e6;
    }

    .table-striped tbody tr:nth-of-type(odd) {
        background-color: #f9f9f9;
    }

    .thead-dark th {
        background-color: #343a40;
        color: white;
    }
</style>

<h3 class="text-center my-1">Quran Surahs</h3>
<div class="container">
    <div class="mt-1">
        <input @bind="SearchQuery" placeholder="Search Surah by Name" class="form-control" />
      
    </div>
    <div class="btn-group mt-1 d-flex justify-content-center">
  
        <button class="btn btn-primary btn-sm" @onclick="SearchSurah">Search</button>
        <button class="btn btn-secondary btn-sm" @onclick="ClearSearch">Clear</button>
    </div>

    <table class="table table-striped table-bordered">
        <thead class="thead-dark">
            <tr>
                <th>Sura Number</th>
                <th>Title</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (FilteredSurahs != null && FilteredSurahs.Any())
            {
                foreach (var surah in FilteredSurahs)
                {
                    <tr>
                        <td>@surah.id</td>
                        <td>@surah.name (@surah.transliteration)</td>
                        <td>
                            <button class="btn btn-primary" @onclick="() => NavigateToSurahDetails(surah.id)">
                                View Surah
                            </button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="3" class="text-center">No Surahs Found</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    private List<Surah>? Surahs { get; set; } = new List<Surah>();
    private List<Surah>? FilteredSurahs { get; set; } = new List<Surah>();
    private string SearchQuery { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        using (var httpClient = new HttpClient())
        {
            var response = await httpClient.GetStringAsync("https://cdn.jsdelivr.net/npm/quran-json@3.1.2/dist/quran_en.json");
            Surahs = JsonSerializer.Deserialize<List<Surah>>(response);
            QuranApp.Data.QuranData.Surahs = Surahs;
            FilteredSurahs = Surahs; // Initialize the filtered list
        }
    }

    private void SearchSurah()
    {
        if (!string.IsNullOrWhiteSpace(SearchQuery))
        {
            FilteredSurahs = Surahs?.Where(s => s.transliteration.Contains(SearchQuery, StringComparison.OrdinalIgnoreCase)).ToList();
        }
    }

    private void ClearSearch()
    {
        SearchQuery = string.Empty;
        FilteredSurahs = Surahs; // Reset to original list
    }

    private void NavigateToSurahDetails(int surahId)
    {
        nav.NavigateTo($"/surahdetails/{surahId}");
    }
}


